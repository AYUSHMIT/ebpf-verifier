
kern/cpustat_kern.o:	file format ELF64-BPF

Disassembly of section tracepoint/power/cpu_idle:
bpf_prog1:
       0:	r8 = r1
       1:	r6 = *(u32 *)(r8 + 12)
       2:	if r6 > 8 goto +136 <LBB0_20>
       3:	r7 = r6
       4:	r7 <<= 2
       5:	*(u32 *)(r10 - 4) = r7
       6:	r2 = r10
       7:	r2 += -4
       8:	r1 = 0 ll
      10:	call 1
      11:	r9 = r0
      12:	if r9 == 0 goto +126 <LBB0_20>
      13:	r1 = r7
      14:	r1 |= 1
      15:	*(u32 *)(r10 - 4) = r1
      16:	r2 = r10
      17:	r2 += -4
      18:	r1 = 0 ll
      20:	call 1
      21:	*(u64 *)(r10 - 16) = r0
      22:	if r0 == 0 goto +116 <LBB0_20>
      23:	r1 = r7
      24:	r1 |= 2
      25:	*(u32 *)(r10 - 4) = r1
      26:	r2 = r10
      27:	r2 += -4
      28:	r1 = 0 ll
      30:	call 1
      31:	*(u64 *)(r10 - 24) = r0
      32:	if r0 == 0 goto +106 <LBB0_20>
      33:	r7 |= 3
      34:	*(u32 *)(r10 - 4) = r7
      35:	r2 = r10
      36:	r2 += -4
      37:	r1 = 0 ll
      39:	call 1
      40:	if r0 == 0 goto +98 <LBB0_20>
      41:	*(u64 *)(r10 - 32) = r0
      42:	r1 = *(u32 *)(r8 + 8)
      43:	r2 = *(u64 *)(r10 - 16)
      44:	r3 = *(u64 *)(r2 + 0)
      45:	*(u64 *)(r10 - 40) = r3
      46:	*(u64 *)(r2 + 0) = r1
      47:	r7 = *(u64 *)(r9 + 0)
      48:	call 5
      49:	if r7 != 0 goto +2 <LBB0_7>
      50:	*(u64 *)(r9 + 0) = r0
      51:	goto +87 <LBB0_20>

LBB0_7:
      52:	r3 = *(u64 *)(r9 + 0)
      53:	*(u64 *)(r9 + 0) = r0
      54:	r1 = *(u32 *)(r8 + 8)
      55:	r2 = 4294967295 ll
      57:	if r1 == r2 goto +46 <LBB0_15>
      58:	r7 = r0
      59:	r1 = *(u64 *)(r10 - 24)
      60:	r1 = *(u64 *)(r1 + 0)
      61:	r4 = *(u64 *)(r10 - 32)
      62:	if r1 == 0 goto +76 <LBB0_20>
      63:	r2 = r7
      64:	r2 -= r1
      65:	*(u64 *)(r10 - 16) = r2
      66:	r1 = 0
      67:	r2 = 3
      68:	r3 = 0 ll
      70:	r3 += 8
      71:	r4 = *(u64 *)(r4 + 0)
      72:	r5 = 37
      73:	goto +20 <LBB0_10>

LBB0_21:
      74:	r0 = r1
      75:	r0 |= 1
      76:	r9 = *(u32 *)(r3 - 4)
      77:	r8 = r4
      78:	r8 <<= 32
      79:	r8 >>= 32
      80:	if r9 == r8 goto +38 <LBB0_12>
      81:	r0 = r1
      82:	r0 |= 2
      83:	r9 = *(u32 *)(r3 + 0)
      84:	if r9 == r8 goto +34 <LBB0_12>
      85:	r8 = *(u32 *)(r3 + 4)
      86:	r9 = r4
      87:	r9 <<= 32
      88:	r9 >>= 32
      89:	r0 = r2
      90:	if r8 == r9 goto +28 <LBB0_12>
      91:	r3 += 16
      92:	r2 += 4
      93:	r1 += 4

LBB0_10:
      94:	r8 = *(u32 *)(r3 - 8)
      95:	r9 = r4
      96:	r9 <<= 32
      97:	r9 >>= 32
      98:	r0 = r1
      99:	if r8 == r9 goto +19 <LBB0_12>
     100:	r0 = r2
     101:	r0 += -2
     102:	if r5 > r0 goto -29 <LBB0_21>
     103:	goto +35 <LBB0_20>

LBB0_15:
     104:	r8 = r3
     105:	r7 = r0
     106:	r6 *= 3
     107:	r1 = *(u64 *)(r10 - 40)
     108:	r6 += r1
     109:	*(u32 *)(r10 - 4) = r6
     110:	r2 = r10
     111:	r2 += -4
     112:	r1 = 0 ll
     114:	call 1
     115:	if r0 == 0 goto +18 <LBB0_18>
     116:	r1 = r7
     117:	r1 -= r8
     118:	goto +14 <LBB0_17>

LBB0_12:
     119:	r1 = r0
     120:	r1 <<= 32
     121:	r1 >>= 32
     122:	if r1 > 4 goto +16 <LBB0_20>
     123:	r6 *= 5
     124:	r6 += r0
     125:	*(u32 *)(r10 - 4) = r6
     126:	r2 = r10
     127:	r2 += -4
     128:	r1 = 0 ll
     130:	call 1
     131:	if r0 == 0 goto +2 <LBB0_18>
     132:	r1 = *(u64 *)(r10 - 16)

LBB0_17:
     133:	lock *(u64 *)(r0 + 0) += r1

LBB0_18:
     134:	r1 = *(u64 *)(r10 - 24)
     135:	r1 = *(u64 *)(r1 + 0)
     136:	if r1 == 0 goto +2 <LBB0_20>
     137:	r1 = *(u64 *)(r10 - 24)
     138:	*(u64 *)(r1 + 0) = r7

LBB0_20:
     139:	r0 = 0
     140:	exit
Disassembly of section tracepoint/power/cpu_frequency:
bpf_prog2:
       0:	r6 = r1
       1:	r9 = *(u32 *)(r6 + 12)
       2:	*(u64 *)(r10 - 16) = r9
       3:	r9 <<= 2
       4:	r1 = r9
       5:	r1 |= 2
       6:	*(u32 *)(r10 - 4) = r1
       7:	r2 = r10
       8:	r2 += -4
       9:	r1 = 0 ll
      11:	call 1
      12:	r7 = r0
      13:	if r7 == 0 goto +90 <LBB1_12>
      14:	r1 = r9
      15:	r1 |= 3
      16:	*(u32 *)(r10 - 4) = r1
      17:	r2 = r10
      18:	r2 += -4
      19:	r1 = 0 ll
      21:	call 1
      22:	r8 = r0
      23:	if r8 == 0 goto +80 <LBB1_12>
      24:	r9 |= 1
      25:	*(u32 *)(r10 - 4) = r9
      26:	r2 = r10
      27:	r2 += -4
      28:	r1 = 0 ll
      30:	call 1
      31:	r9 = r0
      32:	if r9 == 0 goto +71 <LBB1_12>
      33:	r1 = *(u32 *)(r6 + 8)
      34:	*(u64 *)(r8 + 0) = r1
      35:	r6 = *(u64 *)(r7 + 0)
      36:	call 5
      37:	if r6 != 0 goto +2 <LBB1_5>
      38:	*(u64 *)(r7 + 0) = r0
      39:	goto +64 <LBB1_12>

LBB1_5:
      40:	r1 = *(u64 *)(r7 + 0)
      41:	*(u64 *)(r10 - 24) = r0
      42:	*(u64 *)(r7 + 0) = r0
      43:	r2 = *(u64 *)(r9 + 0)
      44:	r3 = 4294967295 ll
      46:	if r2 != r3 goto +57 <LBB1_12>
      47:	r2 = *(u64 *)(r10 - 24)
      48:	r2 -= r1
      49:	*(u64 *)(r10 - 24) = r2
      50:	r1 = 0
      51:	r2 = 3
      52:	r3 = 0 ll
      54:	r3 += 8
      55:	r4 = *(u64 *)(r8 + 0)
      56:	r5 = 37
      57:	goto +20 <LBB1_7>

LBB1_13:
      58:	r0 = r1
      59:	r0 |= 1
      60:	r6 = *(u32 *)(r3 - 4)
      61:	r7 = r4
      62:	r7 <<= 32
      63:	r7 >>= 32
      64:	if r6 == r7 goto +23 <LBB1_9>
      65:	r0 = r1
      66:	r0 |= 2
      67:	r6 = *(u32 *)(r3 + 0)
      68:	if r6 == r7 goto +19 <LBB1_9>
      69:	r6 = *(u32 *)(r3 + 4)
      70:	r7 = r4
      71:	r7 <<= 32
      72:	r7 >>= 32
      73:	r0 = r2
      74:	if r6 == r7 goto +13 <LBB1_9>
      75:	r3 += 16
      76:	r2 += 4
      77:	r1 += 4

LBB1_7:
      78:	r6 = *(u32 *)(r3 - 8)
      79:	r7 = r4
      80:	r7 <<= 32
      81:	r7 >>= 32
      82:	r0 = r1
      83:	if r6 == r7 goto +4 <LBB1_9>
      84:	r0 = r2
      85:	r0 += -2
      86:	if r5 > r0 goto -29 <LBB1_13>
      87:	goto +16 <LBB1_12>

LBB1_9:
      88:	r1 = r0
      89:	r1 <<= 32
      90:	r1 >>= 32
      91:	if r1 > 4 goto +12 <LBB1_12>
      92:	r1 = *(u64 *)(r10 - 16)
      93:	r1 *= 5
      94:	r1 += r0
      95:	*(u32 *)(r10 - 4) = r1
      96:	r2 = r10
      97:	r2 += -4
      98:	r1 = 0 ll
     100:	call 1
     101:	if r0 == 0 goto +2 <LBB1_12>
     102:	r1 = *(u64 *)(r10 - 24)
     103:	lock *(u64 *)(r0 + 0) += r1

LBB1_12:
     104:	r0 = 0
     105:	exit
