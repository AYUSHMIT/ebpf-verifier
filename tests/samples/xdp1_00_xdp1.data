--asm
ldxw r2, [r1+0x4]
ldxw r1, [r1+0x0]
mov r3, r1
add r3, 0xe
jgt r3, r2, +0x37
ldxb r3, [r1+0xc]
ldxb r4, [r1+0xd]
lsh r4, 0x8
or r4, r3
jeq r4, 0xa888, +0x2
mov r3, 0xe
jne r4, 0x81, +0x5
mov r3, r1
add r3, 0x12
jgt r3, r2, +0x2d
mov r3, 0x12
ldxh r4, [r1+0x10]
mov r5, r4
and r5, 0xffff
jeq r5, 0xa888, +0x1
jne r5, 0x81, +0x9
mov r5, r3
add r5, 0x4
mov r4, r1
add r4, r5
jgt r4, r2, +0x22
mov r4, r1
add r4, r3
ldxh r4, [r4+0x2]
mov r3, r5
and r4, 0xffff
jeq r4, 0xdd86, +0x9
jne r4, 0x8, +0x10
add r1, r3
mov r3, 0x0
mov r4, r1
add r4, 0x14
jgt r4, r2, +0x1
ldxb r3, [r1+0x9]
stxw [r10+0xfffc], r3
ja +0xa
add r1, r3
mov r3, 0x0
mov r4, r1
add r4, 0x28
jgt r4, r2, +0x1
ldxb r3, [r1+0x6]
stxw [r10+0xfffc], r3
ja +0x2
mov r1, 0x0
stxw [r10+0xfffc], r1
mov r2, r10
add r2, 0xfffffffc
lddw r1, 0x0
call 0x1
jeq r0, 0x0, +0x3
ldxdw r1, [r0+0x0]
add r1, 0x1
stxdw [r0+0x0], r1
mov r0, 0x1
exit
