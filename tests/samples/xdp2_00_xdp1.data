--asm
mov r6, 0x1
ldxw r2, [r1+0x4]
ldxw r7, [r1+0x0]
mov r1, r7
add r1, 0xe
jgt r1, r2, +0x46
ldxb r1, [r7+0xc]
ldxb r3, [r7+0xd]
lsh r3, 0x8
or r3, r1
jeq r3, 0xa888, +0x2
mov r1, 0xe
jne r3, 0x81, +0x5
mov r1, r7
add r1, 0x12
jgt r1, r2, +0x3c
mov r1, 0x12
ldxh r3, [r7+0x10]
mov r4, r3
and r4, 0xffff
jeq r4, 0xa888, +0x1
jne r4, 0x81, +0x9
mov r4, r1
add r4, 0x4
mov r3, r7
add r3, r4
jgt r3, r2, +0x31
mov r3, r7
add r3, r1
ldxh r3, [r3+0x2]
mov r1, r4
and r3, 0xffff
jeq r3, 0xdd86, +0x9
jne r3, 0x8, +0x10
mov r3, r7
add r3, r1
mov r1, 0x0
mov r4, r3
add r4, 0x14
jgt r4, r2, +0xb
ldxb r1, [r3+0x9]
ja +0x9
mov r3, r7
add r3, r1
mov r1, 0x0
mov r4, r3
add r4, 0x28
jgt r4, r2, +0x3
ldxb r1, [r3+0x6]
ja +0x1
mov r1, 0x0
stxw [r10+0xfffc], r1
mov r2, r10
add r2, 0xfffffffc
lddw r1, 0x0
call 0x1
jeq r0, 0x0, +0x3
ldxdw r1, [r0+0x0]
add r1, 0x1
stxdw [r0+0x0], r1
ldxw r1, [r10+0xfffc]
jne r1, 0x11, +0xd
ldxh r1, [r7+0x4]
ldxh r2, [r7+0x2]
ldxh r3, [r7+0x0]
ldxh r4, [r7+0x6]
stxh [r7+0x0], r4
ldxh r4, [r7+0x8]
stxh [r7+0x2], r4
ldxh r4, [r7+0xa]
stxh [r7+0x4], r4
stxh [r7+0x6], r3
stxh [r7+0x8], r2
stxh [r7+0xa], r1
mov r6, 0x3
mov r0, r6
exit
